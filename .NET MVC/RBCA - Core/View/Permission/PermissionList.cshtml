
<div  ng-controller="PermissionController" style="height: 100%">
    <div class="dHead">
        <a id="refreshPage" class="layui-btn layui-btn-warm layui-btn-sm layui-btn-xstree" ng-click="reload()" onclick="window.location.href='../Permission/PermissionList';">刷新</a>
        @*<a class="layui-btn layui-btn-warm layui-btn-sm layui-btn-xstree" >reload</a>
        <a class="layui-btn layui-btn-warm layui-btn-sm layui-btn-xstree" onclick="query()">query</a>*@
        <a class="layui-btn layui-btn-warm layui-btn-sm layui-btn-xstree" ng-click="add(null)">新增一行</a>
        @*<a class="layui-btn layui-btn-warm layui-btn-sm layui-btn-xstree" onclick="print();">打印缓存对象</a>*@
        <a class="layui-btn layui-btn-warm layui-btn-sm layui-btn-xstree" ng-click="openAll()">全部展开或折叠</a>
        <br>
        <br>

    </div>
    <div class="dBody">
        <table class="layui-hidden" id="treeTable" lay-filter="treeTable"></table>
    </div>
</div>

<script>
    AppService.controller('PermissionController', function ($scope, $cookies, $http, requestService) {
        var editObj = null, ptable = null, treeGrid = null, tableId = 'treeTable', layer = null;
        layui.config({
            base: '../Scripts/Controller/'
        }).extend({
            treeGrid: 'treeGridBack'
        }).use(['jquery', 'treeGrid', 'layer'], function () {
            var $ = layui.jquery;
            treeGrid = layui.treeGrid;//很重要
            layer = layui.layer;
            ptable = treeGrid.render({
                id: tableId
                , elem: '#' + tableId
                //, url: '../Scripts/JData/data2.json'
                , url: '../webapi/Permission/GetPermission'
                , method: 'get'
                , cellMinWidth: 100
                , idField: 'PermissionID'//必須字段
                , treeId: 'PermissionID'//树形id字段名称
                , treeUpId: 'PermissionParent'//树形父id字段名称
                , treeShowName: 'PermissionName'//以树形式显示的字段
                //, idField: 'id'//必須字段
                //, treeId: 'id'//树形id字段名称
                //, treeUpId: 'pId'//树形父id字段名称
                //, treeShowName: 'name'//以树形式显示的字段
                , heightRemove: [".dHead", 10]//不计算的高度,表格设定的是固定高度，此项不生效
                , height: '100%'
                , isFilter: false
                , iconOpen: false//是否显示图标【默认显示】
                , isOpenDefault: false//节点默认是展开还是折叠【默认展开】
                , loading: true
                , cols: [[
                    { field: 'PermissionName', width: '20%', title: '权限名称', edit: 'text' }
                    , { field: 'PermissionID', width: '10%', title: 'ID' }
                    , { field: 'PermissionParent', width: '10%', title: '父节点ID' }
                    , { field: 'SeqNO', width: '11.5%', title: '排序编号', edit: 'text'  }
                    , { field: 'URL', width: '20%', title: '对应地址', edit: 'text' }
                    , {
                        width: '30%', title: '操作', align: 'center'/*toolbar: '#barDemo'*/
                        , templet: function (d) {
                            var html = '';
                            var editBtn = '<a class="layui-btn layui-btn-xs" lay-event="edit">保存修改</a>';
                            var addBtn = '<a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="add">添加下级节点</a>';
                            var delBtn = '<a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除节点</a>';
                            return editBtn + addBtn + delBtn;
                        }
                    }
                ]]
                , isPage: false
                , parseData: function (res) {//数据加载后回调
                    return res;
                }
                , onClickRow: function (index, o) {
                    //console.log(index, o, "单击！");
                }
                , onDblClickRow: function (index, o) {
                   // console.log(index, o, "双击");
                }
            });

            treeGrid.on('tool(' + tableId + ')', function (obj) {
                if (obj.event === 'del') {//删除行
                    del(obj);
                } else if (obj.event === "add") {//添加行
                    $scope.add(obj);
                } else if (obj.event === "edit") { //编辑行
                    edit(obj)
                };
            });
        });


        //删除元素
        function del(obj) {
            layer.confirm("你确定删除数据吗？如果存在下级节点则一并删除，此操作不能撤销！", { icon: 3, title: '提示' },

                function (index) {//确定回调

                    //后台数据库删除记录
                    //obj 包括当前节点数据 obj.data.permissionid sqeno 
                    //boj.data.childern是一个数组，包括所有子节点内，递归内容所有 data childern知道最后节点！最后节点childern 为array(0)

                    //当前为10086节点不需要提交后台处理，前台删除结束
                    if (obj.data.PermissionID == 10086) {
                        obj.del();
                        layer.close(index);
                    }
                    else {
                        requestService.post({ data: JSON.stringify(obj.data) }, '../webapi/Permission/DeletePermission').then(function (response) {
                            layer.close(index);
                            if (response.data == "OK") {
                                layer.msg("删除成功！", {
                                    time: 5000
                                });
                            }
                            else {
                                layer.msg(response.data, {
                                    time: 5000
                                });
                            };
                        });

                        obj.del();
                        layer.close(index);
                    };                  
                }, function (index) {//取消回调
                    layer.close(index);
                }
            );
        }

        var i = 1000000;
        //添加
        $scope.add = function (pObj) {

            var originPermission = pObj ? pObj.data : null; //点击节点内容
            if (originPermission!=null && originPermission.PermissionID == 10086) {
                layer.msg("请先保存变更以后，再添加新的节点！");
                return;
            }
            else {
                var permission = {};
                permission.PermissionID = 10086;
                permission.PermissionName = '新增权限（点击修改名称）';
                permission.PermissionStatus = 1;
                permission.PermissionParent = originPermission ? originPermission.PermissionID :null;
                permission.URL = "";
                permission.SeqNO = 0;        
            };

            treeGrid.addRow(tableId, originPermission ? originPermission[treeGrid.config.indexName] + 1 : 0, permission);
        }

        //编辑修改菜单
        function edit(pObj) {

            var permission = {
                "PermissionID": pObj.data.PermissionID,
                "PermissionName": pObj.data.PermissionName,
                "PermissionStatus": 1,
                "PermissionParent": pObj.data.PermissionParent,
                "URL": pObj.data.URL,
                "SeqNO": pObj.data.SeqNO             
            };

            var index = layer.load(1, { shade: 0.2 });
            requestService.post({ data: JSON.stringify(permission) }, '../webapi/Permission/SaveChange').then(function (response) {
                layer.close(index);
                if (response.data == "OK") {
                    layer.msg("保存修改成功", {
                        time: 5000 
                    });
                }
                else {
                    layer.msg(response.data, {
                        time: 5000
                    });
                };
            });
        };

        function print() {
            console.log(treeGrid.cache[tableId]);
            var loadIndex = layer.msg("对象已打印，按F12，在控制台查看！", {
                time: 3000
                , offset: 'auto'//顶部
                , shade: 0
            });
        }

        $scope.openorclose=function (){
            var map = treeGrid.getDataMap(tableId);
            var o = map['102'];
            treeGrid.treeNodeOpen(tableId, o, !o[treeGrid.config.cols.isOpen]);
        }


        $scope.openAll=function () {
            var treedata = treeGrid.getDataTreeList(tableId);
            treeGrid.treeOpenAll(tableId, !treedata[0][treeGrid.config.cols.isOpen]);
        }

        function getCheckData() {
            var checkStatus = treeGrid.checkStatus(tableId)
                , data = checkStatus.data;
            layer.alert(JSON.stringify(data));
        }

        function radioStatus() {
            var data = treeGrid.radioStatus(tableId)
            layer.alert(JSON.stringify(data));
        }
        function getCheckLength() {
            var checkStatus = treeGrid.checkStatus(tableId)
                , data = checkStatus.data;
            layer.msg('选中了：' + data.length + ' 个');
        }

        $scope.reload=function () {
            $("#refreshPage").click();
        }

        function query() {
            treeGrid.query(tableId, {
                where: {
                    name: 'sdfsdfsdf'
                }
            });
        }

        function test() {
            console.log(treeGrid.cache[tableId], treeGrid.getClass(tableId));


            /*var map=treeGrid.getDataMap(tableId);
            var o= map['102'];
            o.name="更新";
            treeGrid.updateRow(tableId,o);*/
        }
    });
</script>

